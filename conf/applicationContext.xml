<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<context:component-scan base-package="com.atguigu.survey.*.component.*"/>
	
	<!--  1.引入外部属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 2.配置主数据库数据源的bean -->
	<bean id="dataSource_even" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
	</bean>
	
	<!-- 配置从数据库数据源的bean -->
	<bean id="dataSource_odd" parent="dataSource_even">
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/survey1022_odd"/>
	</bean>
	
	<!-- 配置数据源路由器 -->
	<bean id="surveyRouter" class="com.atguigu.survey.router.SurveyRouter">
		<property name="targetDataSources">
			<map>
				<entry key="even" value-ref="dataSource_even"/>
				<entry key="odd" value-ref="dataSource_odd"/>
			</map>
		</property>
		<!-- 指定默认的数据源，在router对象的determineCurrentLookupKey()方法返回null时使用 -->
		<property name="defaultTargetDataSource" ref="dataSource_even"/>
	</bean>
	
	<!-- 3.配置SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 装配数据源[路由器] -->
		<property name="dataSource" ref="surveyRouter"/>
		<!-- 指定Hibernate配置文件的位置 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<!-- 指定hbm映射文件的位置 -->
		<property name="mappingLocations" value="classpath:com/atguigu/survey/*/entity/*.hbm.xml"/>
	</bean>
	
	<!-- 4.配置Hibernate事务管理器 -->
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<!-- 装配SessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 5.开启基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
	
	<!-- 6.以基于XML的方式配置日志切面的bean -->
	<bean id="logAspect" class="com.atguigu.survey.admin.advisor.LogAspect" autowire="byType"/>
	
	<!-- 7.以基于XML的方式配置日志切面 -->
	<aop:config>
		<!-- 配置日志切面 -->
		<aop:aspect ref="logAspect" order="1">
			
			<!-- 声明切入点表达式 -->
			<aop:pointcut expression="(execution(* *..*Service.save*(..)) || 
									  execution(* *..*Service.update*(..)) || 
									  execution(* *..*Service.delete*(..)) || 
									  execution(* *..*Service.remove*(..)) || 
									  execution(* *..*Service.copy*(..)) || 
									  execution(* *..*Service.move*(..)) || 
									  execution(* *..*Service.parse*(..)) || 
									  execution(* *..*Service.calculate*(..))) and !bean(logServiceImpl)" id="logPointCut"/>
			
			<!-- 指定环绕通知的通知方法 -->
			<aop:around pointcut-ref="logPointCut" method="record"/>
			
		</aop:aspect>
	</aop:config>
	
	<!-- 配置石英任务bean细节 -->
	<bean id="jobDetailBean" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.atguigu.survey.admin.scheduler.LogScheduler"/>
		<property name="jobDataMap">
			<map>
				<entry key="logService" value-ref="logServiceImpl"/>
			</map>
		</property>
	</bean>
	
	<!-- 配置触发器 -->
	<bean id="cronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetailBean"/>
		<!-- 适合的配置：0 0 0 15 * ? -->
		<!-- 便于测试的配置：0 8 11 1 * ? -->
		<property name="cronExpression" value="0 8 11 1 * ?"/>
	</bean>
	
	<!-- 配置启动石英任务的工厂bean -->
	<bean id="factoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerBean"/>
			</list>
		</property>
	</bean>
	
	<!-- 配置Spring监听器 -->
	<bean id="logInitListener" class="com.atguigu.survey.admin.listener.LogInitListener" autowire="byType"/>

	<!-- 配置EHCache缓存 -->
	<!-- 1.配置EHCache工厂Bean -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml"/>
	
	<!-- 2.配置缓存管理器bean -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>

	<!-- 3.配置自定义KeyGenerator -->
	<bean id="surveyKeyGenerator" class="com.atguigu.survey.cache.SurveyKeyGenerator"/>
	
	<!-- 4.配置缓存通知 -->
	<cache:advice id="surveyCacheAdvice" key-generator="surveyKeyGenerator" cache-manager="cacheManager">
		<cache:caching cache="surveyCache">
			<cache:cacheable method="get*"/>
			<cache:cacheable method="find*"/>
			
			<cache:cache-evict method="save*" all-entries="true"/>
			<cache:cache-evict method="update*" all-entries="true"/>
			<cache:cache-evict method="delete*" all-entries="true"/>
			<cache:cache-evict method="remove*" all-entries="true"/>
		</cache:caching>
	</cache:advice>
	
	<!-- 5.配置为缓存通知定义的切入点表达式 -->
	<aop:config>
	    <aop:advisor advice-ref="surveyCacheAdvice" pointcut="execution(* *..*Service.*(..))" order="0"/>
	</aop:config>

</beans>